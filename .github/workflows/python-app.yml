name: Python Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    # services:
    #  mysql:
    #    image: mysql:latest
    #    ports:
    #      - 3306:3306
        
    steps:
      # Checkout code from the repository
      - uses: actions/checkout@v4

      # Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Set up environment variables
      #- name: Set up environment variables
      #  run: |
      #    echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
      #    echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
      #    echo "DB_USER=${{ secrets.USER_NAME }}" >> $GITHUB_ENV
      #    echo "DB_PASSWORD=${{ secrets.USER_PASSWORD }}" >> $GITHUB_ENV
      #    echo "DB_NAME=${{ secrets.DATABASE_NAME }}" >> $GITHUB_ENV

      - name: Set up environment variables
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
          echo "MYSQL_PUBLIC_URL=${{ secrets.MYSQL_PUBLIC_URL }}" >> $GITHUB_ENV
          echo "MYSQLHOST=${{ secrets.MYSQLHOST }}" >> $GITHUB_ENV
          echo "MYSQLUSER=${{ secrets.MYSQLUSER }}" >> $GITHUB_ENV
          echo "MYSQLPASSWORD=${{ secrets.MYSQLPASSWORD }}" >> $GITHUB_ENV
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> $GITHUB_ENV
          echo "MYSQLPORT=${{ secrets.MYSQLPORT }}" >> $GITHUB_ENV



      # Install required dependencies (flask, flake8, pytest, pygame, and MySQL connector)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pygame mysql-connector-python
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Lint the code using flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Wait for MySQL to be ready
      

      # Start Flask app
      - name: Start Flask app
        run: |
          nohup python main.py > flask.log 2>&1 &
          sleep 10  # Wait for the app to fully initialize

      # Display Flask logs
      - name: Display Flask logs
        run: cat flask.log

      # Run API tests with pytest
      - name: Run API tests
        run: pytest tests/test_code.py

      # Stop Flask app
      - name: Stop Flask app
        run: pkill -f main.py || true
